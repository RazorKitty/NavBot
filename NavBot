let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Projects/FYP/NavBot
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +8 SensorSweepTask.cpp
badd +16 LandmarkExtractionTask.cpp
badd +10 LandmarkExtractionTask.h
badd +9 SensorSweepTask.h
badd +0 NavBot.cpp
argglobal
silent! argdel *
edit NetrwTreeListing\ 1
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 78 + 156) / 313)
exe '2resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 2resize ' . ((&columns * 234 + 156) / 313)
exe '3resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 3resize ' . ((&columns * 234 + 156) / 313)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 15 - ((14 * winheight(0) + 41) / 83)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
15
normal! 0
lcd ~/Projects/FYP/NavBot
wincmd w
argglobal
if bufexists('~/Projects/FYP/NavBot/SensorSweepTask.h') | buffer ~/Projects/FYP/NavBot/SensorSweepTask.h | else | edit ~/Projects/FYP/NavBot/SensorSweepTask.h | endif
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=20
setlocal fen
7
normal! zo
let s:l = 13 - ((12 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
13
normal! 0
wincmd w
argglobal
if bufexists('~/Projects/FYP/NavBot/NavBot.cpp') | buffer ~/Projects/FYP/NavBot/NavBot.cpp | else | edit ~/Projects/FYP/NavBot/NavBot.cpp | endif
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 52 - ((24 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
52
normal! 043|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 78 + 156) / 313)
exe '2resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 2resize ' . ((&columns * 234 + 156) / 313)
exe '3resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 3resize ' . ((&columns * 234 + 156) / 313)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOF
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
